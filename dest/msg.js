function getTarget(n){return io.sockets.sockets.filter(function(e){return e.username===n})}function getUser(n,e){async.waterfall([function(n){connect(function(e,t){e||n(null,t)})},function(n,e){n.collection("users",function(n,t){n||e(null,t)})},function(e,t){e.findOne({username:n},{username:1,nickname:1,_id:1,avatar:1},function(n,e){n||t(null,e)})}],function(n,t){e(null,t)})}var http=require("http"),IO=require("socket.io"),async=require("async"),client=require("mongodb").MongoClient,ObjectID=require("mongodb").ObjectID,server=http.createServer(function(){});server.listen(10086);var io=IO(server),room="pyblog",connect=function(){var n;return function(e){return n?e(null,n):void client.connect("mongodb://localhost:27017/pyblog",function(t,o){return n=o,t?e(t,null):e(null,n)})}}();io.on("connection",function(n){n.join(room),n.on("add",function(n){this.username=n}).on("msg",function(e){async.waterfall([function(n){connect(function(e,t){n(null,t)})},function(n,e){n.collection("users",function(n,t){e(null,n,t)})},function(n,t,o){t&&t.findOne({username:e.to},function(n){o(null,n)})},function(t,o){t||connect(function(t,c){c.collection("msg").insert({from:n.username,date:+new Date,msg:e.msg,to:e.to,read:!1},function(n,e){o(null,e)})})}],function(t,o){var c=getTarget(e.to);c.length&&c.forEach(function(t){getUser(n.username,function(n,c){n||t.emit("recive",{_id:o[0]._id,msg:e.msg,from:c,date:+new Date,read:!1})})})})}).on("disconnect",function(){n.leave(room)})});